x-logging: &default-logging
  options:
    max-size: "10m"
    max-file: "3"
  driver: json-file

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.custom
      args:
        PHP: 8.3
    image: invoiceninja/invoiceninja-custom:latest
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - ./.env:/var/www/html/.env
      - app_public:/var/www/html/public
      - app_storage:/var/www/html/storage
    ports:
      - "9000:9000"  # PHP-FPM port for Nginx Proxy Manager
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    logging: *default-logging

  mysql:
    image: mysql:8
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *default-logging

  redis:
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *default-logging

  # Optional: PHP built-in web server for direct HTTP access
  # Uncomment if you prefer HTTP proxy instead of FastCGI in Nginx Proxy Manager
  # app-http:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.custom
  #   command: ["php", "-S", "0.0.0.0:8080", "-t", "/var/www/html/public"]
  #   restart: unless-stopped
  #   env_file:
  #     - ./.env
  #   volumes:
  #     - ./.env:/var/www/html/.env
  #     - app_public:/var/www/html/public
  #     - app_storage:/var/www/html/storage
  #   ports:
  #     - "8080:8080"  # HTTP port for Nginx Proxy Manager
  #   networks:
  #     - app-network
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   logging: *default-logging

networks:
  app-network:
    driver: bridge

volumes:
  app_public:
    driver: local
  app_storage:
    driver: local  
  mysql_data:
    driver: local
  redis_data:
    driver: local